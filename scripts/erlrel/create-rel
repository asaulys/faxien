%% -*- erlang -*-

main([RelVsn, TargetDir]) ->

    Apps = [compiler, gs, hipe, dialyzer, typer],

    %% Construct the release tuple
    RelTuple = {release, {"erl", RelVsn},
                {erts, erlang:system_info(version)},
                [app(kernel),
                 app(stdlib)] ++ [app(A) || A <- Apps]},

    %% Dump the tuple to disk
    file:write_file(filename:join([TargetDir, "erl.rel"]),
                    io_lib:format("~p.\n", [RelTuple])).


%% Construct a {app, vsn} tuple, given an application atom
app(App) ->
    case application:load(App) of
        ok ->
            ok;
        {error, {already_loaded, App}} ->
            ok
    end,
    {ok, Vsn} = application:get_key(App, vsn),
    {App, Vsn}.
